<Activity mc:Ignorable="sap sap2010" x:Class="Download_Pictures_From_Drive" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_DownloadedFolder" Type="OutArgument(si:DirectoryInfo)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>824,2162.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="52">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="52">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" sap2010:Annotation.AnnotationText="Download the Electoral_Challenge folder and store it in downloads.&#xA;Pre-conditions:&#xA;- Chrome browser open on electoral challenge's drive &#xA;&#xA;Post-conditions:&#xA;-out_DownloadedFolder contains the downloaded folder containing the pictures and the .txt file" BrowserType="Chrome" DisplayName="Attach Google Drive Browser " sap:VirtualizedContainerService.HintSize="558.4,2097.6" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="6532fef8679c604e28f8f73fbc335e9d" Selector="&lt;html app='chrome.exe' url='https://drive.google.com/drive/folders/1d37LgBwS6yC1jEcjrXz4gRPmI4JQBql-' /&gt;">
    <ui:BrowserScope.Body>
      <ActivityAction x:TypeArguments="x:Object">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
        </ActivityAction.Argument>
        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="524.8,1842.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="descarcatiButtonExists" />
            <Variable x:TypeArguments="si:FileInfo" Name="downloadedFileName" />
            <Variable x:TypeArguments="x:String" Name="downloadsFolder" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Folder Dropdown" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True" SimulateClick="False">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="681a9b23-9962-4bd0-9de5-9eb0e96bc6fe" InformativeScreenshot="430d3004af945e3662fa20d378a8b1f2" Selector="&lt;webctrl parentid='drive_main_page' tag='DIV' innertext='Electorale_Challenge' /&gt;" WaitForReady="COMPLETE">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
              </ui:Target>
            </ui:Click.Target>
          </ui:Click>
          <ui:UiElementExists DisplayName="Element Exists - descarcati button" Exists="[descarcatiButtonExists]" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="9f406291-042d-44f4-85e6-767ea9107a67" InformativeScreenshot="6ae5234be971ac4c61d0241104dea1b0" Selector="&lt;webctrl innertext='Descărcați' tag='DIV' /&gt;" TimeoutMS="1500" WaitForReady="COMPLETE" />
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <ui:ImageFound DisplayName="Image Exists- descarcati button" Found="[descarcatiButtonExists]" sap:VirtualizedContainerService.HintSize="483.2,107.2" sap2010:WorkflowViewState.IdRef="ImageFound_1">
            <ui:ImageFound.Image>
              <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAABwAAAAXCAYAAAAYyi9XAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAACJSURBVEhL7dQBCoAgDIXhju5RvMmO4lGMJxnDNt2kgsIfJEHmBxFt+eUWKBZCKGumBYr9E0wpHbsryM9GmUAiKgCeiIPt2SgXWC/W9pbMr5Rf3i4rhlwfjYR6MOQCEUe9GFLBeqkUIA3rzaEpsNd3wBjjOexdmNVSQfw9ZlDM9P48KvhUC7y5nHdrXIlcT3CGhAAAAABJRU5ErkJggg==" />
            </ui:ImageFound.Image>
            <ui:ImageFound.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="ec6bb32a-d62d-4c6d-a3ba-454e88871a8b" WaitForReady="COMPLETE">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
              </ui:Target>
            </ui:ImageFound.Target>
          </ui:ImageFound>
          <If Condition="[descarcatiButtonExists]" DisplayName="If descarcati button exists, click it" sap:VirtualizedContainerService.HintSize="483.2,784.8" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <ui:GetLastDownloadedFile Timeout="{x:Null}" DisplayName="Wait for Download" DownloadFolder="C:\Users\Lorena\Downloads" File="[downloadedFileName]" sap:VirtualizedContainerService.HintSize="433.6,605.6" sap2010:WorkflowViewState.IdRef="GetLastDownloadedFile_2">
                <ui:GetLastDownloadedFile.Body>
                  <ActivityAction>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,396" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ClickImage ContinueOnError="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Image descarcati button" sap:VirtualizedContainerService.HintSize="333.6,156" sap2010:WorkflowViewState.IdRef="ClickImage_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="True">
                        <ui:ClickImage.CursorPosition>
                          <ui:CursorPosition Position="Center">
                            <ui:CursorPosition.OffsetX>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetX>
                            <ui:CursorPosition.OffsetY>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:CursorPosition.OffsetY>
                          </ui:CursorPosition>
                        </ui:ClickImage.CursorPosition>
                        <ui:ClickImage.Image>
                          <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="iVBORw0KGgoAAAANSUhEUgAAAB4AAAAUCAYAAACaq43EAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAACQSURBVEhL7dTRCcAgDEXRbu0kTuIiTpIVLE9QgiSSBEop9uNSS9ADpXgRUXujEJxS6kkzaz9s6gy41jrXK8xn1kxwKaVDeOKdw+vMmgsegLaW9mqZPzVH1rwocv1cEh5BkQtGHI+iSIXH4dIMoIbu9vFC8K7vwjnneYg37JXO5KkwbqMIjj2Wm0yFn+40mNoNu3RqhS2x/FwAAAAASUVORK5CYII=" />
                        </ui:ClickImage.Image>
                        <ui:ClickImage.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="4dc7158f-5daa-470e-a486-9551746eb9da" WaitForReady="COMPLETE">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                          </ui:Target>
                        </ui:ClickImage.Target>
                      </ui:ClickImage>
                      <ui:WaitUiElementAppear FoundElement="{x:Null}" WaitActive="{x:Null}" WaitVisible="{x:Null}" DisplayName="Find Element Downloaded Archive" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1">
                        <ui:WaitUiElementAppear.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="92c6e80d-0345-491b-a32a-51f1cdb4a1c8" InformativeScreenshot="3a5c3f36dc867e62f8747e67bc2dc6dc" Selector="&lt;ctrl name='Electorale_Challenge – Google Drive – Google Chrome' role='pane' /&gt;&lt;ctrl name='Google Chrome' role='pane' /&gt;&lt;ctrl name='Bara de descărcări' role='grouping' /&gt;&lt;ctrl name=' Electorale_Challenge-*.zip' role='grouping' /&gt;" TimeoutMS="[300*1000]" WaitForReady="COMPLETE" />
                        </ui:WaitUiElementAppear.Target>
                      </ui:WaitUiElementAppear>
                    </Sequence>
                  </ActivityAction>
                </ui:GetLastDownloadedFile.Body>
              </ui:GetLastDownloadedFile>
            </If.Then>
          </If>
          <Assign DisplayName="Assign downloadsFolder" sap:VirtualizedContainerService.HintSize="483.2,60" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[downloadsFolder]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Directory.GetCurrentDirectory.ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <uascw:ExtractFiles Password="{x:Null}" CodePage="Default" DestinationFolder="[downloadsFolder]" DestinationFolderInfo="[out_DownloadedFolder]" DisplayName="Extract/Unzip Archive" ExtractToADedicatedFolder="True" FileToExtract="[Path.Combine(System.Environment.ExpandEnvironmentVariables(&quot;%userprofile%\Downloads&quot;),downloadedFileName.Name)]" sap:VirtualizedContainerService.HintSize="483.2,208.8" sap2010:WorkflowViewState.IdRef="ExtractFiles_1" SkipUnsupportedFiles="False" />
          <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="483.2,134.4" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="chrome" />
        </Sequence>
      </ActivityAction>
    </ui:BrowserScope.Body>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
  </ui:BrowserScope>
</Activity>